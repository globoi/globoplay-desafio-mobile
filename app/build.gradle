plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    compileSdk 32

    dataBinding {
        enabled = true
    }

    defaultConfig {
        applicationId "com.simonassi.globoplay"
        minSdk 26
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "TMDB_ACCESS_KEY", "\"" + getTMDBAccess() + "\"")
        buildConfigField("String", "BASE_URL", "\"" + getBaseUrl() + "\"")
        buildConfigField("String", "BUCKET_URL", "\"" + getBucketUrl() + "\"")

        javaCompileOptions {
            annotationProcessorOptions {
                arguments["dagger.hilt.disableModulesHaveInstallInCheck"] = "true"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //For bottom tab navigation
    def nav_version = "2.4.2"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    //For Retrofit - HTTP Requests
    def retrofitVersion = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // For Kotlin Coroutines - Suspended Functions
    def coroutinesVersion = "1.3.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    //For dependency injection
    def hiltVersion = '2.38.1'
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"
    implementation "com.google.dagger:hilt-android:$hiltVersion"

    //For Architecture Components: ViewModel e LiveData
    def lifeCycleVersion = "2.4.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifeCycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifeCycleVersion"

    //For layouts dataBinding
    kapt "com.android.databinding:compiler:3.1.4"

    //For load images into imageView
    def glideVersion = "4.10.0"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    //For blur transformations
    implementation 'jp.wasabeef:glide-transformations:4.3.0'


}

kapt {
    generateStubs = true
}

/**
 * Get the api key defined inside gradle.properties file in root project
 * @return api key
 */
def getTMDBAccess() {
    return project.findProperty("tmdb_access_key")
}

/**
 * Get the base url defined inside gradle.properties file in root project
 * @return The Movie Database Base Url
 */
def getBaseUrl(){
    return project.findProperty("base_url")
}

/**
 * Get image repository defined inside gradle.properties file in root project
 * @return The Movie Database Image Repository Url
 */
def getBucketUrl(){
    return project.findProperty("bucket_url")
}